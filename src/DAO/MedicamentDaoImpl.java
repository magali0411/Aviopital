package DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Logger;

import MODEL.colis.Caisse;
import MODEL.colis.ColisMedicament;
import MODEL.hopital.Medicament;

public class MedicamentDaoImpl implements MedicamentDao{
	
	private static MedicamentDaoImpl instance = null;
	private static Factory f = Factory.getInstance();
	private Connection connexion;
	
	private static final Logger logger = Logger.getLogger("aviophital.MedicamentDaoImpl");
	
	public static MedicamentDaoImpl getInstance() {
		if (instance == null) {
			instance = new MedicamentDaoImpl();
		}
		return instance;
	}
	

	@Override
	public void create(Medicament medicament, Caisse caisse) {
		Connection connexion;
		PreparedStatement preparedStatement = null;
		
		try {
			connexion = Factory.getConnection();
			String requete = " insert into caisses_medicaments (product_name,dci,forme_dosage,DLU,quantity,id_lot,classe_therapeutique,num_caisse,caisse,dotation_U7) values( ? , ? , ? , ? , ? , ? , ? , ? , ? , ?)";
			preparedStatement.setString(1, medicament.getName());
			preparedStatement.setString(2, medicament.getDCI());
			preparedStatement.setString(3, medicament.getForme_dosage());
			preparedStatement.setString(4, medicament.getDLU());
			preparedStatement.setInt(5, medicament.getQuantite());
			preparedStatement.setString(6,medicament.getLot());
			preparedStatement.setString(7,medicament.getClasse());
			preparedStatement.setInt(8,caisse.getNum());
			preparedStatement.setString(9,caisse.getName());		
						
			 // Eexecution de la requête
			preparedStatement = connexion.prepareStatement(requete);
			preparedStatement.execute();
			preparedStatement.close();
			
			// Récupération de l'ID auto-généré par la base de donnée et
			ResultSet rs = preparedStatement.getGeneratedKeys();
			if (rs.next()) {
			   int autoGeneratedIdFromDatabase = rs.getInt(1);
			   String id = String.valueOf(autoGeneratedIdFromDatabase);
			   medicament.setId(id);
			} else {
			 logger.warning( "Error exception" );
			}
			
			
		} catch (SQLException e) {
	
			e.printStackTrace();
		}
		
	}
	
	

	@Override
	public ArrayList<String> getAllName() {

		ArrayList<String> listName = new ArrayList<>();
		

		
		String query = "Select product_name "
				+ "FROM caisses_medicaments ";
		
		
		PreparedStatement preparedStatment;
		
		try {
			
			connexion = f.getConnection();
			preparedStatment = connexion.prepareStatement(query );	
			preparedStatment.execute();
			
			ResultSet resultSet = preparedStatment.getResultSet();
			
			if (resultSet == null) {
				logger.warning("Pas de médicaments dans la base");
			} else {
			
				while (resultSet.next()) {
			
					// On récupère le médicament concerné
					String name = resultSet.getString("product_name");		
					listName.add(name);
				}

			}
			
			
			preparedStatment.close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return listName;
	}
	
	
	@Override
	public Medicament find(String id) {
	
		Medicament medicament = null;
		Caisse newCaisse;
		

		
		String query = "Select product_name,dci,forme_dosage,DLU,quantity,id_lot,classe_therapeutique,num_caisse,caisse,dotation_U7 "
				+ "FROM caisses_medicaments "
				+ "WHERE id = ?";
		
		PreparedStatement preparedStatment;
		
		try {
			
			connexion = f.getConnection();
			preparedStatment = connexion.prepareStatement(query );	
			preparedStatment.setString(1, id );
			preparedStatment.execute();
			ResultSet resultSet = preparedStatment.getResultSet();
			resultSet.next();
			
			String name = resultSet.getString("product_name");
			String dci = resultSet.getString("dci");
			String dosage = resultSet.getString("forme_dosage");
			String DLU = resultSet.getString("DLU");
			int quantity = resultSet.getInt("quantity");
			String id_lot = resultSet.getString("id_lot");
			String classe =  resultSet.getString("classe_therapeutique");
			int num_caisse = resultSet.getInt("num_caisse");
			String nom_caisse = resultSet.getString("caisse");
			//String dotation = resultSet.getString("dotation_U7");
			
			
			medicament = new Medicament(name, dci, dosage,classe, DLU, id_lot, quantity);
			newCaisse = new ColisMedicament(nom_caisse, num_caisse);
			newCaisse.addMateriel(medicament);


			logger.info("Medicament trouvé " + medicament.getName());
			
			preparedStatment.close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return medicament;
	}
	

	
	
	
	public Caisse getCaisseMedicamentByName(String name) {		


		Caisse newCaisse = null;
		
	
		String query = "Select id,product_name,dci,forme_dosage,DLU,quantity,id_lot,classe_therapeutique,num_caisse,dotation_U7 "
				+ "FROM caisses_medicaments "
				+ "WHERE caisse = ?";
		
		PreparedStatement preparedStatment;
		
		try {
			
			connexion = f.getConnection();
			preparedStatment = connexion.prepareStatement(query );	
			preparedStatment.setString(1, name );
			preparedStatment.execute();
			
			ResultSet resultSet = preparedStatment.getResultSet();
			
			if ( resultSet.next() ) {

				int num_caisse = resultSet.getInt("num_caisse");
				newCaisse = new ColisMedicament(name, num_caisse);
			
				//resultSet.first();
			}
			
			while ( resultSet.next() ) {
			
				String product_name = resultSet.getString("product_name");
				String id = resultSet.getString("id");
				String dci = resultSet.getString("dci");
				String dosage = resultSet.getString("forme_dosage");
				String DLU = resultSet.getString("DLU");
				int quantity = resultSet.getInt("quantity");
				String id_lot = resultSet.getString("id_lot");
				String classe =  resultSet.getString("classe_therapeutique");
				String dotation = resultSet.getString("dotation_U7");
			
			
				Medicament medicament = new Medicament(product_name, dci, dosage,classe, DLU, id_lot, quantity);
	
				
				newCaisse.addMateriel(medicament);
			}
			
			preparedStatment.close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		logger.info("Caisse trouvée " + newCaisse.getName());
		
		return newCaisse;
		
	}



	@Override
	public ArrayList<Caisse> findCaisse(String id) {
		Medicament medicament = null;
		ArrayList<Caisse> listcaisse = new ArrayList<>();
		

		
		String query = "Select product_name,dci,forme_dosage,DLU,quantity,id_lot,classe_therapeutique,num_caisse,caisse,dotation_U7 "
				+ "FROM caisses_medicaments "
				+ "WHERE id = ?";
		
	
		
		PreparedStatement preparedStatment;
		
		try {
			
			connexion = f.getConnection();
			preparedStatment = connexion.prepareStatement(query );	
			preparedStatment.setString(1, id );
			preparedStatment.execute();
			ResultSet resultSet = preparedStatment.getResultSet();
			
			if (resultSet.next()) {
			
				// On récupère le médicament concerné
				String name = resultSet.getString("product_name");
				String dci = resultSet.getString("dci");
				String dosage = resultSet.getString("forme_dosage");
				String DLU = resultSet.getString("DLU");
				int quantity = resultSet.getInt("quantity");
				String id_lot = resultSet.getString("id_lot");
				String classe =  resultSet.getString("classe_therapeutique");
			
				// On l'instancie
				medicament = new Medicament(name, dci, dosage,classe, DLU, id_lot, quantity);
				logger.info("Medicament: " + medicament.getName());
			}
						
			
			// 2e requête pour trouver toutes les caisses associées
			
			String queryCaisses = "Select num_caisse,caisse,dotation_U7 "
					+ "FROM caisses_medicaments "
					+ "WHERE id = ?";
			
			PreparedStatement caisseAttributes = connexion.prepareStatement(queryCaisses );	
			caisseAttributes.setString(1, id );
			caisseAttributes.execute();
			
			ResultSet resultSetCaisses = caisseAttributes.getResultSet();
			

			while ( resultSetCaisses.next() ) {
			
				int num_caisse = resultSetCaisses.getInt("num_caisse");
				String nom_caisse = resultSetCaisses.getString("caisse");
				String dotation = resultSetCaisses.getString("dotation_U7");	
				
				// On les instancie
				Caisse caisse = new ColisMedicament(nom_caisse, num_caisse);
				caisse.addMateriel(medicament);
				listcaisse.add(caisse);
			
				logger.info("Medicament contenu dans la caisse " + caisse.getName());
			}
			
			caisseAttributes.close();		
			preparedStatment.close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return listcaisse;
	}



	@Override
	public ArrayList<Medicament> contient(String name_caisse) {
		
		Caisse caisse = null;
		ArrayList<Medicament> listMed = new ArrayList<>();
		

		
		try {
			
			connexion = f.getConnection();
			
			// On créé la caisse concernée
			
			
			String query_caisse = "Select num_caisse,caisse "
					+ "FROM  caisses_medicaments "
					+ "WHERE caisse = ?";
			
			PreparedStatement preparedStatment;

			preparedStatment = connexion.prepareStatement(query_caisse);	
			preparedStatment.setString(1, name_caisse );
			preparedStatment.execute();
			ResultSet resultSet = preparedStatment.getResultSet();
			
			if(resultSet.first()) {
				int num_caisse = resultSet.getInt("num_caisse");
				caisse = new ColisMedicament(name_caisse, num_caisse);
			}
			
			String query_med = "Select id,product_name,dci,forme_dosage,DLU,quantity,id_lot,classe_therapeutique,num_caisse,caisse,dotation_U7 "
					+ "FROM  caisses_medicaments "
					+ "WHERE caisse = ?";
			
			PreparedStatement preparedStatmentMed;

			preparedStatmentMed = connexion.prepareStatement(query_med);	
			preparedStatmentMed.setString(1, name_caisse );
			preparedStatmentMed.execute();
			resultSet = preparedStatmentMed.getResultSet();
			

			
			// On trouve tous les médicaments qu'elle contient
			while ( resultSet.next() ) {
				
			
				String id = resultSet.getString("id");
				String name = resultSet.getString("product_name");
				String dci = resultSet.getString("dci");
				String dosage = resultSet.getString("forme_dosage");
				String DLU = resultSet.getString("DLU");
				int quantity = resultSet.getInt("quantity");
				String id_lot = resultSet.getString("id_lot");
				String classe =  resultSet.getString("classe_therapeutique");
				
				String dotation = resultSet.getString("dotation_U7");
					
				Medicament medicament = new Medicament(name, dci, dosage,classe, DLU, id_lot, quantity);
				
				caisse.addMateriel(medicament);
				listMed.add(medicament);
			
				logger.info("Medicament contenu dans la caisse " + medicament.getName());
			}
			
			if (resultSet.wasNull()) {
				logger.info("Medicament non stocké");
			}
			
			preparedStatmentMed.close();
			preparedStatment.close();
			
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return listMed;
		
	}

	
	
	// Méthode trop lourde à mettre en place sur une base de données ayant un gros volume
private ArrayList<Caisse> addAll() {
		
		ArrayList<Caisse> listcaisse = new ArrayList<>();
		
		try {
			connexion = f.getInstance().getConnection();
			Statement statement = connexion.createStatement();

			if ( statement.execute( "Select id,product_name,dci,forme_dosage,DLU,quantity,id_lot,classe_therapeutique,num_caisse,caisse,dotation_U7 FROM caisses_medicaments " ) ){
				ResultSet resultSet = statement.getResultSet();
				while ( resultSet.next() ) {
					
					String id = resultSet.getString("id");
					String name = resultSet.getString("product_name");
					String dci = resultSet.getString("dci");
					String dosage = resultSet.getString("forme_dosage");
					String DLU = resultSet.getString("DLU");
					int quantity = resultSet.getInt("quantity");
					String id_lot = resultSet.getString("id_lot");
					String classe =  resultSet.getString("classe_therapeutique");
					int num_caisse = resultSet.getInt("num_caisse");
					String name_caisse = resultSet.getString("caisse");
					String dotation = resultSet.getString("dotation_U7");
					
					
					Medicament medicament = new Medicament(name, dci, dosage,classe, DLU, id_lot, quantity);
					Caisse newCaisse = new ColisMedicament(name_caisse, num_caisse);

					newCaisse.addMateriel(medicament);
					listcaisse.add(newCaisse);			
					
					logger.info("Medciament ajouté " + medicament.getName());

				}
			}

			statement.close();
			
			
		} catch (Exception e) {
			logger.severe( e.getClass().getName() + ": " + e.getMessage() );
		}
		
		return listcaisse;
						
	}
	
  public static void main(String[] args) {
	
	  MedicamentDaoImpl med = MedicamentDaoImpl.getInstance();
	  
	  //Medicament result = med.find("10");
	  
	  //med.getCaisseMedicamentByName("ANESTHESIE");
	  
	 // med.findCaisse("56");
	  
	  med.contient("HYPNOTIQUE");
	  
	
  }





}
